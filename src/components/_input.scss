:root {
  --sgbp-input-color: var(--sgbp-color-gray-500);
  --sgbp-input-placeholder-color: var(--sgbp-color-gray-300);
  --sgbp-input-s-height: 32px;
  --sgbp-input-height: 40px;
  --sgbp-input-l-height: 48px;
  --sgbp-input-padding-horizontal: 16px;
  --sgb-input-padding-vertical: 0;
  --sgb-input-textarea-padding-vertical: var(--sgbp-spacing-xs);
  --sgbp-input-background-color: var(--sgbp-color-white);
  --sgbp-input-error-color: var(--sgbp-danger-color);
  --sgbp-input-border-radius: 10px;
  --sgbp-input-border-color: var(--sgbp-color-gray-50);
  --sgbp-input-border-width: 1.5px;
  --sgbp-input-font-size: var(--sgbp-font-size-base);
  --sgbp-input-font-weight: normal;
}

.sgbp-input {
  width: 100%;
  flex: 1 1 auto;

  outline: 0;
  padding-right: var(--sgbp-input-padding-horizontal);
  padding-left: var(--sgbp-input-padding-horizontal);
  padding-top: var(--sgb-input-padding-vertical);
  padding-bottom: var(--sgb-input-padding-vertical);
  height: var(--sgbp-input-height);

  font-size: var(--sgbp-input-font-size);
  font-weight: var(--sgbp-input-font-weight);
  background-color: var(--sgbp-input-background-color);
  color: var(--sgbp-input-color);

  border-style: solid;
  border-radius: var(--sgbp-input-border-radius);
  border-width: var(--sgbp-input-border-width);
  border-color: var(--sgbp-input-border-color);
  min-width: 4rem;

  &::placeholder {
    color: var(--sgbp-input-placeholder-color);
  }

  &[disabled],
  &.is-disabled {
    --sgbp-input-color: var(--sgbp-color-gray-50);
    cursor: not-allowed;
  }

  &:hover:not([disabled]):not(.is-disabled):not(.is-invalid) {
    --sgbp-input-border-color: var(--sgbp-color-gray-100);
    --sgbp-input-color: var(--sgbp-color-gray-500);
  }

  &:focus {
    --sgbp-input-border-color: var(--sgbp-color-gray-100);
    --sgbp-input-color: var(--sgbp-color-gray-base);
    box-shadow: 0 0 0 3px var(--sgbp-color-gray-50-opactiy-60);
  }

  &.is-invalid,
  &--stateful.is-dirty:invalid {
    --sgbp-input-color: var(--sgbp-input-error-color);
    --sgbp-input-border-color: var(--sgbp-input-error-color);
  }

  &--l {
    --sgbp-input-font-size: calc(1.1 * var(--sgbp-input-font-size));
    --sgbp-input-height: var(--sgbp-input-l-height);
  }

  &--inline {
    width: auto;
  }

  &.is-hidden {
    /* Hide input element while still preserving accessibility features (i.e. tab order) and ensuring that its value
     * gets submitted properly.
     * CSS properties such as display: none or visibility: hidden will not work out. The reasons are:
     * - the input value will not be sent to the server on form submit
     * - the input will be excluded out of tab order.
     */
    width: 0.1px; //Setting the property values to zero ends up throwing the element out of tab party in some browsers.
    height: 0.1px; //Setting the property values to zero ends up throwing the element out of tab party in some browsers.
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
  }
}

textarea.sgbp-input {
  --sgb-input-padding-vertical: var(--sgb-input-textarea-padding-vertical);
}

input[type='text'].sgbp-input,
input[type='email'].sgbp-input,
input[type='password'].sgbp-input {
  appearance: none;
}
