@use "../settings";

:root {
  --sgbp-grid-gutter-width-2xs: calc(var(--sgbp-spacing-2xs));
  --sgbp-grid-gutter-width-xs: calc(var(--sgbp-spacing-xs));
  --sgbp-grid-gutter-width-s: calc(var(--sgbp-spacing-xs));
  --sgbp-grid-gutter-width-m: calc(var(--sgbp-spacing-s));
  --sgbp-grid-gutter-width-l: calc(var(--sgbp-spacing-m));
  --sgbp-grid-gutter-width-xl: calc(var(--sgbp-spacing-l));
  --sgbp-grid-borderColor: var(--sgbp-color-gray-50);
  --sgbp-grid-gutter-browser-hack-spacing: 0px;

  @media #{settings.$sgbp-l-up} {
    --sgbp-grid-gutter-width-s: calc(var(--sgbp-spacing-s));
    --sgbp-grid-gutter-width-m: var(--sgbp-spacing-m);
    --sgbp-grid-gutter-width-l: calc(var(--sgbp-spacing-l));
    --sgbp-grid-gutter-width-xl: calc(var(--sgbp-spacing-xl));
  }
}

@mixin sgbp-grid-cell-flexing($columns, $columnsTotal) {
  --sgbp-grid-gutter-width-calculated-per-cell: calc(var(--sgbp-grid-gutter-width) - (var(--sgbp-grid-gutter-width) / #{$columnsTotal}));
  flex: 0 0 calc(#{$columns/$columnsTotal} * 100% - var(--sgbp-grid-gutter-width-calculated-per-cell) - var(--sgbp-grid-gutter-browser-hack-spacing));
}

@mixin sgbp-grid-cell-responsive($mediaQuery, $responsiveSelector) {
  @media #{$mediaQuery} {
    &#{$responsiveSelector},
    .sgbp-grid--inline &#{$responsiveSelector},
    .sgbp-grid--inlineBlock &#{$responsiveSelector} {
      &--orderFirst {
        order: -1;
      }

      &--orderLast {
        order: 999;
      }

      &--shrink {
        flex-basis: auto;
        flex-grow: 0;
      }

      &--grow {
        flex: 1 0 auto;
      }

      &--double {
        flex-grow: 2;
      }

      &--triple {
        flex-grow: 3;
      }

      &--1of12 {
        @include sgbp-grid-cell-flexing(1, 12);
      }

      &--2of12,
      &--1of6 {
        @include sgbp-grid-cell-flexing(1, 6);
      }

      &--3of12,
      &--1of4 {
        @include sgbp-grid-cell-flexing(1, 4);
      }

      &--4of12,
      &--2of6,
      &--1of3 {
        @include sgbp-grid-cell-flexing(1, 3);
      }

      &--5of12 {
        @include sgbp-grid-cell-flexing(5, 12);
      }

      &--6of12,
      &--3of6,
      &--2of4,
      &--1of2 {
        @include sgbp-grid-cell-flexing(1, 2);
      }

      &--7of12 {
        @include sgbp-grid-cell-flexing(7, 12);
      }

      &--8of12,
      &--4of6,
      &--2of3 {
        @include sgbp-grid-cell-flexing(8, 12);
      }

      &--9of12,
      &--3of4 {
        @include sgbp-grid-cell-flexing(3, 4);
      }

      &--10of12,
      &--5of6 {
        @include sgbp-grid-cell-flexing(5, 6);
      }

      &--11of12 {
        @include sgbp-grid-cell-flexing(11, 12);
      }

      &--full,
      &--12of12,
      &--6of6,
      &--4of4,
      &--3of3,
      &--2of2,
      &--1of1 {
        @include sgbp-grid-cell-flexing(1, 1);
      }
    }
  }
}

@mixin sgbp-grid-responsive($mediaQuery, $responsiveSelector) {
  @media #{$mediaQuery} {
    &#{$responsiveSelector} {
      &--vertical {
        height: 100%;
        flex-direction: column;
        flex-wrap: nowrap;
      }

      &--gutters,
      &--gutters2XS,
      &--guttersXS,
      &--guttersS,
      &--guttersM,
      &--guttersL,
      &--guttersXL {
        gap: var(--sgbp-grid-gutter-width);
      }

      &--columnGutters {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-m);
        row-gap: 0;
        column-gap: var(--sgbp-grid-gutter-width);
      }

      &--rowGutters {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-m);
        column-gap: 0;
        row-gap: var(--sgbp-grid-gutter-width);
      }

      &--gutters {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-m);
      }

      &--gutters2XS {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-2xs);
      }

      &--guttersXS {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-xs);
      }

      &--guttersS {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-s);
      }

      &--guttersM {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-m);
      }

      &--guttersL {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-l);
      }

      &--guttersXL {
        --sgbp-grid-gutter-width: var(--sgbp-grid-gutter-width-xl);
      }

      &--fit {
        > .sgbp-grid__cell:nth-child(n) {
          flex: 1 1 0;
        }
      }

      &--full {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 1);
        }
      }

      &--1of2 {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 2);
        }
      }

      &--1of3 {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 3);
        }
      }

      &--1of4 {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 4);
        }
      }

      &--1of5 {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 5);
        }
      }

      &--1of6 {
        > .sgbp-grid__cell {
          @include sgbp-grid-cell-flexing(1, 6);
        }
      }
    }
  }
}

.sgbp-grid__example {
  padding: 2px;
  color: var(--sgbp-color-accent-inverted);
  background-color: var(--sgbp-color-accent);
}

.sgbp-grid {
  --sgbp-grid-gutter-width: 0px;

  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  flex: 1 1 auto;

  &--inline {
    display: inline-flex;

    .sgbp-grid__cell {
      flex: 0 1 auto;
    }
  }

  &--inlineBlock {
    display: flex;

    .sgbp-grid__cell {
      flex: 0 1 auto;
    }
  }

  &--centerWidowLine {
    justify-content: space-around;
  }

  &--top {
    align-items: flex-start;
  }

  &--bottom {
    align-items: flex-end;
  }

  &--center {
    align-items: center;
  }

  &--baseline {
    align-items: baseline;
  }

  &--bordered {
    box-shadow: 0 0 0 1.5px var(--sgbp-grid-borderColor);
  }

  &--roundedM {
    overflow: hidden;
    border-radius: var(--sgbp-border-radius-m);
  }

  &--roundedS {
    overflow: hidden;
    border-radius: var(--sgbp-border-radius-s);
  }

  &__cell {
    flex: 1;
    min-width: 0;

    /* alignment per cell */
    &--top {
      align-self: flex-start;
    }

    &--bottom {
      align-self: flex-end;
    }

    &--center {
      align-self: center;
    }

    .sgbp-grid--bordered > & {
      box-shadow: 0 0 0 1.5px var(--sgbp-grid-borderColor);

      &:last-child:nth-child(odd) {
        box-shadow: none;
        border-right: 1.5px solid var(--sgbp-grid-borderColor);
        border-top: 1.5px solid var(--sgbp-grid-borderColor);
      }
    }

    @include sgbp-grid-cell-responsive('all', '');
    @include sgbp-grid-cell-responsive(settings.$sgbp-s-up, '\\[s\\]');
    @include sgbp-grid-cell-responsive(settings.$sgbp-m-up, '\\[m\\]');
    @include sgbp-grid-cell-responsive(settings.$sgbp-l-up, '\\[l\\]');
    @include sgbp-grid-cell-responsive(settings.$sgbp-xl-up, '\\[xl\\]');
  }

  @include sgbp-grid-responsive('all', '');
  @include sgbp-grid-responsive(settings.$sgbp-s-up, '\\[s\\]');
  @include sgbp-grid-responsive(settings.$sgbp-m-up, '\\[m\\]');
  @include sgbp-grid-responsive(settings.$sgbp-l-up, '\\[l\\]');
  @include sgbp-grid-responsive(settings.$sgbp-xl-up, '\\[xl\\]');

  // Disable grid-layout for MS IE, MS Edge and Firefox in print view to avoid
  // printing issues
  // Bug Reports:
  // - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11961322/
  // - https://bugzilla.mozilla.org/show_bug.cgi?id=258397
  //
  // sass-lint:disable no-vendor-prefixes
  @media #{settings.$sgbp-print-only} {
    // Edge:
    @supports (-ms-ime-align: auto) {
      display: block;
    }

    // IE 10 and 11:
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      display: block;
    }

    // Firefox
    @-moz-document url-prefix() {
      display: block;
    }
  }
  // sass-lint:enable no-vendor-prefixes
}
